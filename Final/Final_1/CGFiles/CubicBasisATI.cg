float CubicBasis(float t, float4 u03, float u4)
{
	float N00=0;
	float N01=0;
	float N02=0;
	float N03=0;
	
	if (t>=1) t=.999;
	if (t<=0) t=.001;
	if(t >= u03.x && t < u03.y) N00 = 1.0;
	if(t >= u03.y && t < u03.z) N01 = 1.0;
	if(t >= u03.z && t < u03.w) N02 = 1.0;
	if(t >= u03.w && t < u4)	N03 = 1.0;
	
	float N10 = (t-u03.x)/(u03.y-u03.x)*N00 + (u03.z-t)/(u03.z-u03.y)*N01;
	float N11 = (t-u03.y)/(u03.z-u03.y)*N01 + (u03.w-t)/(u03.w-u03.z)*N02;
	float N12 = (t-u03.z)/(u03.w-u03.z)*N02 + (u4-t)/(u4-u03.w)*N03;
	
	float N20 = (t-u03.x)/(u03.z-u03.x)*N10 + (u03.w-t)/(u03.w-u03.y)*N11;
	float N21 = (t-u03.y)/(u03.w-u03.y)*N11 + (u4-t)/(u4-u03.z)*N12;
	
	return (t-u03.x)/(u03.w-u03.x)*N20 + (u4-t)/(u4-u03.y)*N21;
}

float main(float2 coords					: TEXCOORD0,
			uniform samplerRECT ctrlPts1	: TEXUNIT0,
			uniform samplerRECT ctrlPts2	: TEXUNIT1,
			uniform samplerRECT evalPtIndex	: TEXUNIT2,
			uniform int coordType,
			uniform int nu,
			uniform int numVal) : COLOR
{
	float uBasis = 0;
	float ctrlIndexVal =  texRECT(evalPtIndex,coords);

//	if (ctrlIndexVal != -1)
//	{
		int vIndex = floor(ctrlIndexVal/nu); 
		int uIndex = ctrlIndexVal - vIndex*nu;
		float2 ctrlPtCoords = float2(uIndex + 0.5,vIndex + 0.5);
		
		float4 u03	= texRECT(ctrlPts1,ctrlPtCoords);
		float u4	= texRECT(ctrlPts2,ctrlPtCoords);

		float coord;
		if (coordType == 0)
			coord = coords.x;
		else
			coord = coords.y;

		float u = (coord-0.5)/numVal;
		uBasis = CubicBasis(u, u03, u4);
//	}
	return uBasis;
}
